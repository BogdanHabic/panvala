/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter } from 'ethers';
import { Provider } from 'ethers/providers';
import { BigNumber } from 'ethers/utils';
import { TransactionOverrides } from '.';

export class ParameterStore extends Contract {
  functions: {
    proposals(
      arg0: number | string | BigNumber
    ): Promise<{
      key: string;
      value: string;
      metadataHash: (string)[];
      executed: boolean;
      0: string;
      1: string;
      2: (string)[];
      3: boolean;
    }>;

    params(arg0: string): Promise<string>;

    get(_name: string): Promise<string>;

    getAsUint(_name: string): Promise<BigNumber>;

    getAsAddress(_name: string): Promise<string>;

    init(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    setInitialValue(
      _name: string,
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    createProposal(
      key: string,
      value: string,
      metadataHash: (string)[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    createManyProposals(
      keys: (string)[],
      values: (string)[],
      metadataHashes: ((string)[])[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    setValue(
      proposalID: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    proposalCount(): Promise<BigNumber>;
  };
  filters: {
    ParameterInitialized(key: null, value: null): EventFilter;

    ProposalCreated(
      proposer: string | null,
      requestID: null,
      key: null,
      value: null,
      metadataHash: null
    ): EventFilter;

    ParameterSet(proposalID: null, key: null, value: null): EventFilter;
  };
}
